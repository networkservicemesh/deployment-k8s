---
name: Release
on:
  push:
    branches:
      - "release/*"
jobs:
  print-debug-info:
    name: Print debug info for Release workflow
    runs-on: ubuntu-latest
    steps:
      - uses: hmarr/debug-action@v2

  check-images:
    name: Check images
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get tag
        run: |
          branch=${{ github.event.ref }}
          echo '::set-output name=tag::'${branch#refs/heads/release/}
        id: get-tag-step

      - name: Check images
        run: |
          git fetch origin
          git checkout origin/release/${{ steps.get-tag-step.outputs.tag }}

          pattern="ghcr\.io\/networkservicemesh\/ci\/.*:[a-z0-9]\{7\}"
          grep -roh 'apps' -e ${pattern} || exit 0;

          exit 1;

  create-release:
    needs: check-images
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{github.event.ref}}
      - name: Get tag
        run: |
          branch=${{github.event.ref}}
          echo '::set-output name=tag::'${branch#refs/heads/release/}
        id: get-tag-step
      - name: Push tag ${{ steps.get-tag-step.outputs.tag }}
        run: |
          git status
          git tag ${{ steps.get-tag-step.outputs.tag }}
          git push origin ${{ steps.get-tag-step.outputs.tag }} -f
      - name: Create release ${{ steps.get-tag-step.outputs.tag }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.NSM_BOT_GITHUB_TOKEN }}
        with:
          tag_name: refs/tags/${{ steps.get-tag-step.outputs.tag }}
          release_name: ${{ steps.get-tag-step.outputs.tag }}
          draft: false
          prerelease: false

  update-dependent-repositories:
    strategy:
      matrix:
        repository:
          - integration-tests
    name: Update ${{ matrix.repository }}
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        run: |
          branch=${{github.event.workflow_run.head_branch}}
          echo '::set-output name=tag::'${branch#release/}
        id: get-tag-step
      - name: Setup envs
        run: |
          echo GOPATH=$GITHUB_WORKSPACE >> $GITHUB_ENV
          echo GO111MODULE=on >> $GITHUB_ENV
          echo $GITHUB_WORKSPACE/bin >> $GITHUB_PATH
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}/src/github.com/${{ github.repository }}
          repository: ${{ github.repository }}
          token: ${{ secrets.NSM_BOT_GITHUB_TOKEN }}
          ref: ${{github.event.workflow_run.head_branch}}
      - name: Install gotestmd
        run: "go get github.com/networkservicemesh/gotestmd"
        working-directory: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - name: Install goimports
        run: "go get golang.org/x/tools/cmd/goimports"
        working-directory: ${{ github.workspace }}/src/github.com/${{ github.repository }}
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16
      - name: Checkout networkservicemesh/${{ matrix.repository }}
        uses: actions/checkout@v2
        with:
          path: ${{ github.workspace }}/src/github.com/networkservicemesh/${{ matrix.repository }}
          repository: networkservicemesh/${{ matrix.repository }}
          token: ${{ secrets.NSM_BOT_GITHUB_TOKEN }}
      - name: Update ${{ matrix.repository }} locally
        working-directory: ${{ github.workspace }}/src/github.com/networkservicemesh/${{ matrix.repository }}
        run: |
          go generate ./...
          go mod tidy
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 8
      - name: Push update to the ${{ matrix.repository }}
        working-directory: ${{ github.workspace }}/src/github.com/networkservicemesh/${{ matrix.repository }}
        run: |
          sed -r -i 's/sha = "[a-z0-9]*"/sha = "tags\/${{ steps.get-tag-step.outputs.tag }}"/g' extensions/base/suite.go
          git add -- .
          echo Starting to update repositotry ${{ matrix.repository }}
          if ! [ -n "$(git diff --cached --exit-code)" ]; then
            echo ${{ matrix.repository }} is up to date
            exit 0;
          fi
          git config --global user.email "nsmbot@networkservicmesh.io"
          git config --global user.name "NSMBot"
          echo "Update to ${{ github.repository }}@${{ steps.get-tag-step.outputs.tag }}" >> /tmp/commit-message
          git commit -s -F /tmp/commit-message
          git checkout -b ${{ github.event.workflow_run.head_branch }}
          git push -f origin ${{ github.event.workflow_run.head_branch }}
